{"ast":null,"code":"import React, { Component } from \"react\";\nimport axios from \"axios\";\nexport class HTTPRequests extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n  }\n  componentDidMount() {\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(response => {\n      console.log(response);\n      this.setState({\n        posts: response.data\n      });\n    });\n  }\n  render() {\n    const posts = this.state.posts;\n    // return (\n    // \t<div>\n    // \t\t<h2>Posts</h2>\n    // \t\t{/* turns the response into one string value */}\n    // \t\t{/* <p>{JSON.stringify(this.state.posts)}</p> */}\n    // \t\t{posts.map((book) => {\n    // \t\t\treturn (\n    // \t\t\t\t<div key={book.id}>\n    // \t\t\t\t\t<h4>{book.title}</h4>\n    // \t\t\t\t\t<p>userId: {book.userId}</p>\n    // \t\t\t\t\t<p>Id: {book.id}</p>\n    // \t\t\t\t\t<p>{book.body}</p>\n    // \t\t\t\t</div>\n    // \t\t\t);\n    // \t\t})}\n    // \t</div>\n    // );\n\n    // return (\n    // \t<div>\n    // \t\t<h2>Posts</h2>\n    // \t\t{/* turns the response into one string value */}\n    // \t\t{/* <p>{JSON.stringify(this.state.posts)}</p> */}\n    // \t\t{posts.length ? (\n    // \t\t\tposts.map((book) => (\n    // \t\t\t\t<div key={book.id}>\n    // \t\t\t\t\t<h4>{book.title}</h4>\n    // \t\t\t\t\t<p>{book.userID}</p>\n    // \t\t\t\t\t<p></p>\n    // \t\t\t\t\t{book.body}\n    // \t\t\t\t</div>\n    // \t\t\t))\n    // \t\t) : (\n    // \t\t\t<h4>Loading posts....</h4>\n    // \t\t)}\n    // \t</div>\n    // );\n  }\n}\nexport default HTTPRequests;\n\n// import React, { Component } from \"react\";\n// import axios from \"axios\";\n\n// export class HTTPRequests extends Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n\n// \t\tthis.state = {\n// \t\t\tposts: [],\n// \t\t\terror: null,\n// \t\t};\n// \t}\n\n// \tcomponentDidMount() {\n// \t\taxios\n// \t\t\t.get(\"https://jsonplaceholder.typicode.com/posts\")\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(response);\n// \t\t\t\tthis.setState({\n// \t\t\t\t\tposts: Array.isArray(response.data) ? response.data : [response.data],\n// \t\t\t\t});\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tthis.setState({\n// \t\t\t\t\terror: error.message,\n// \t\t\t\t});\n// \t\t\t});\n// \t}\n\n// \trender() {\n// \t\tconst posts = this.state.posts;\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t<h2>Posts:</h2>\n// \t\t\t\t{posts.length ? (\n// \t\t\t\t\tposts.map((post) => (\n// \t\t\t\t\t\t<div key={post.id}>\n// \t\t\t\t\t\t\t<h2>\n// \t\t\t\t\t\t\t\t{post.id}. {post.title}\n// \t\t\t\t\t\t\t</h2>\n// \t\t\t\t\t\t\t<h4>By User ID {post.userId}</h4>\n// \t\t\t\t\t\t\t<p>{post.body}</p>\n// \t\t\t\t\t\t\t<hr />\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t))\n// \t\t\t\t) : this.state.error ? (\n// \t\t\t\t\t<p>{this.state.error}</p>\n// \t\t\t\t) : (\n// \t\t\t\t\t<h4>Loading posts ...</h4>\n// \t\t\t\t)}\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\n\n// export default HTTPRequests;","map":{"version":3,"names":["React","Component","axios","HTTPRequests","constructor","props","state","posts","componentDidMount","get","then","response","console","log","setState","data","render"],"sources":["/workspace/react-challenge-1/my-app/src/components/HTTPRequests.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport class HTTPRequests extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tposts: [],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\taxios.get(\"https://jsonplaceholder.typicode.com/posts\").then((response) => {\n\t\t\tconsole.log(response);\n\t\t\tthis.setState({\n\t\t\t\tposts: response.data,\n\t\t\t});\n\t\t});\n\t}\n\trender() {\n\t\tconst posts = this.state.posts;\n\t\t// return (\n\t\t// \t<div>\n\t\t// \t\t<h2>Posts</h2>\n\t\t// \t\t{/* turns the response into one string value */}\n\t\t// \t\t{/* <p>{JSON.stringify(this.state.posts)}</p> */}\n\t\t// \t\t{posts.map((book) => {\n\t\t// \t\t\treturn (\n\t\t// \t\t\t\t<div key={book.id}>\n\t\t// \t\t\t\t\t<h4>{book.title}</h4>\n\t\t// \t\t\t\t\t<p>userId: {book.userId}</p>\n\t\t// \t\t\t\t\t<p>Id: {book.id}</p>\n\t\t// \t\t\t\t\t<p>{book.body}</p>\n\t\t// \t\t\t\t</div>\n\t\t// \t\t\t);\n\t\t// \t\t})}\n\t\t// \t</div>\n\t\t// );\n\n\t\t// return (\n\t\t// \t<div>\n\t\t// \t\t<h2>Posts</h2>\n\t\t// \t\t{/* turns the response into one string value */}\n\t\t// \t\t{/* <p>{JSON.stringify(this.state.posts)}</p> */}\n\t\t// \t\t{posts.length ? (\n\t\t// \t\t\tposts.map((book) => (\n\t\t// \t\t\t\t<div key={book.id}>\n\t\t// \t\t\t\t\t<h4>{book.title}</h4>\n\t\t// \t\t\t\t\t<p>{book.userID}</p>\n\t\t// \t\t\t\t\t<p></p>\n\t\t// \t\t\t\t\t{book.body}\n\t\t// \t\t\t\t</div>\n\t\t// \t\t\t))\n\t\t// \t\t) : (\n\t\t// \t\t\t<h4>Loading posts....</h4>\n\t\t// \t\t)}\n\t\t// \t</div>\n\t\t// );\n\t}\n}\n\nexport default HTTPRequests;\n\n// import React, { Component } from \"react\";\n// import axios from \"axios\";\n\n// export class HTTPRequests extends Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n\n// \t\tthis.state = {\n// \t\t\tposts: [],\n// \t\t\terror: null,\n// \t\t};\n// \t}\n\n// \tcomponentDidMount() {\n// \t\taxios\n// \t\t\t.get(\"https://jsonplaceholder.typicode.com/posts\")\n// \t\t\t.then((response) => {\n// \t\t\t\tconsole.log(response);\n// \t\t\t\tthis.setState({\n// \t\t\t\t\tposts: Array.isArray(response.data) ? response.data : [response.data],\n// \t\t\t\t});\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tthis.setState({\n// \t\t\t\t\terror: error.message,\n// \t\t\t\t});\n// \t\t\t});\n// \t}\n\n// \trender() {\n// \t\tconst posts = this.state.posts;\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t<h2>Posts:</h2>\n// \t\t\t\t{posts.length ? (\n// \t\t\t\t\tposts.map((post) => (\n// \t\t\t\t\t\t<div key={post.id}>\n// \t\t\t\t\t\t\t<h2>\n// \t\t\t\t\t\t\t\t{post.id}. {post.title}\n// \t\t\t\t\t\t\t</h2>\n// \t\t\t\t\t\t\t<h4>By User ID {post.userId}</h4>\n// \t\t\t\t\t\t\t<p>{post.body}</p>\n// \t\t\t\t\t\t\t<hr />\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t))\n// \t\t\t\t) : this.state.error ? (\n// \t\t\t\t\t<p>{this.state.error}</p>\n// \t\t\t\t) : (\n// \t\t\t\t\t<h4>Loading posts ...</h4>\n// \t\t\t\t)}\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\n\n// export default HTTPRequests;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,SAASF,SAAS,CAAC;EAC3CG,WAAWA,CAACC,KAAK,EAAE;IAClB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACZC,KAAK,EAAE;IACR,CAAC;EACF;EAEAC,iBAAiBA,CAAA,EAAG;IACnBN,KAAK,CAACO,GAAG,CAAC,4CAA4C,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC1EC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACG,QAAQ,CAAC;QACbP,KAAK,EAAEI,QAAQ,CAACI;MACjB,CAAC,CAAC;IACH,CAAC,CAAC;EACH;EACAC,MAAMA,CAAA,EAAG;IACR,MAAMT,KAAK,GAAG,IAAI,CAACD,KAAK,CAACC,KAAK;IAC9B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD;AACD;AAEA,eAAeJ,YAAY;;AAE3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}