{"ast":null,"code":"var _jsxFileName = \"/workspace/react-challenge-1/my-app/src/components/MethodsAsPropsParent.js\";\nimport React, { Component } from \"react\";\nimport MethodsAsPropsChild from \"./MethodsAsPropsChild\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MethodsAsPropsParent extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSignIn = () => {\n      this.setState({\n        isLoggedIn: true\n      });\n    };\n    this.handleSignOut = () => {\n      this.setState({\n        isLoggedIn: false\n      });\n    };\n    this.state = {\n      isLoggedIn: false\n    };\n  }\n  // below code works on the toggle function\n  //   handleSignIn = () => {\n  //     this.setState({\n  //       isLoggedIn: this.state.isLoggedIn === false ? true : false,\n  //     });\n  //   };\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MethodsAsPropsChild, {\n        isLoggedIn: this.state.isLoggedIn,\n        handleSignIn: this.handleSignIn,\n        handleSignOut: this.handleSignOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default MethodsAsPropsParent;","map":{"version":3,"names":["React","Component","MethodsAsPropsChild","jsxDEV","_jsxDEV","MethodsAsPropsParent","constructor","props","handleSignIn","setState","isLoggedIn","handleSignOut","state","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/workspace/react-challenge-1/my-app/src/components/MethodsAsPropsParent.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport MethodsAsPropsChild from \"./MethodsAsPropsChild\";\n\nclass MethodsAsPropsParent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n    };\n  }\n\n  handleSignIn = () => {\n    this.setState({\n      isLoggedIn: true,\n    });\n  };\n\n  handleSignOut = () => {\n    this.setState({\n      isLoggedIn: false,\n    });\n  };\n\n  // below code works on the toggle function\n  //   handleSignIn = () => {\n  //     this.setState({\n  //       isLoggedIn: this.state.isLoggedIn === false ? true : false,\n  //     });\n  //   };\n\n  render() {\n    return (\n      <div>\n        <MethodsAsPropsChild\n          isLoggedIn={this.state.isLoggedIn}\n          handleSignIn={this.handleSignIn}\n          handleSignOut={this.handleSignOut}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MethodsAsPropsParent;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,oBAAoB,SAASJ,SAAS,CAAC;EAC3CK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAMfC,YAAY,GAAG,MAAM;MACnB,IAAI,CAACC,QAAQ,CAAC;QACZC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDC,aAAa,GAAG,MAAM;MACpB,IAAI,CAACF,QAAQ,CAAC;QACZC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ,CAAC;IAfC,IAAI,CAACE,KAAK,GAAG;MACXF,UAAU,EAAE;IACd,CAAC;EACH;EAcA;EACA;EACA;EACA;EACA;EACA;;EAEAG,MAAMA,CAAA,EAAG;IACP,oBACET,OAAA;MAAAU,QAAA,eACEV,OAAA,CAACF,mBAAmB;QAClBQ,UAAU,EAAE,IAAI,CAACE,KAAK,CAACF,UAAW;QAClCF,YAAY,EAAE,IAAI,CAACA,YAAa;QAChCG,aAAa,EAAE,IAAI,CAACA;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,eAAeb,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module"}