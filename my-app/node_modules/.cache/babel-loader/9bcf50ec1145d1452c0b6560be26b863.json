{"ast":null,"code":"var _jsxFileName = \"/workspace/react-challenge-1/my-app/src/components/Tester.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComponent = () => {\n  _s();\n  // Initialize state with an empty array or some default value\n  const [nums, setNums] = useState([]);\n\n  // Function to update nums state\n  const updateNums = () => {\n    setNums([...nums, 1]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateNums,\n      children: \"Update Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: nums.map((num, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: num\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n_s(MyComponent, \"mV0V2xe4ZOOiTUm3ppiI5mtt1F8=\");\n_c = MyComponent;\nexport default MyComponent;\n\n// import React, { useState, useEffect } from \"react\";\n\n// const TimerComponent = () => {\n// \tconst [time, setTime] = useState(0);\n\n// \tuseEffect(() => {\n// \t\tconsole.log(\"Creating timer\");\n// \t\tconst interval = setInterval(() => {\n// \t\t\tconsole.log(\"Interval executed\");\n// \t\t\tsetTime((time) => time + 1);\n// \t\t}, 1000);\n\n// \t\treturn () => {\n// \t\t\tconsole.log(\"Cleaning up!\");\n// \t\t\tclearInterval(interval);\n// \t\t};\n// \t}, []);\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<p>Time: {time} seconds</p>\n// \t\t</div>\n// \t);\n// };\n\n// export default TimerComponent;\n\n// import React, { useState, useEffect } from \"react\";\n\n// function Timer() {\n// \tconst [count, setCount] = useState(0);\n\n// \tuseEffect(() => {\n// \t\tconst interval = setInterval(() => {\n// \t\t\tsetCount((prevCount) => prevCount + 1);\n// \t\t}, 1000);\n\n// \t\treturn () => clearInterval(interval);\n// \t}, []);\n\n// \treturn <div>Timer: {count}</div>;\n// }\n\n// export default Timer;\n\n// import React, { useState, useEffect, useRef } from \"react\";\n\n// function Timer() {\n// \tconst [count, setCount] = useState(0);\n// \tconst intervalRef = useRef(null);\n\n// \tuseEffect(() => {\n// \t\tintervalRef.current = setInterval(() => {\n// \t\t\tsetCount((prevCount) => prevCount + 1);\n// \t\t}, 1000);\n\n// \t\treturn () => clearInterval(intervalRef.current);\n// \t}, []);\n\n// \tconst handleStopTimer = () => {\n// \t\tclearInterval(intervalRef.current);\n// \t\tconsole.log(\"Timer stopped manually!\");\n// \t};\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<p>Timer: {count} seconds</p>\n// \t\t\t<button onClick={handleStopTimer}>Stop Timer</button>\n// \t\t</div>\n// \t);\n// }\n\n// export default Timer;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyComponent","_s","nums","setNums","updateNums","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","num","index","_c","$RefreshReg$"],"sources":["/workspace/react-challenge-1/my-app/src/components/Tester.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst MyComponent = () => {\n\t// Initialize state with an empty array or some default value\n\tconst [nums, setNums] = useState([]);\n\n\t// Function to update nums state\n\tconst updateNums = () => {\n\t\tsetNums([...nums, 1]);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<button onClick={updateNums}>Update Numbers</button>\n\t\t\t<ul>\n\t\t\t\t{nums.map((num, index) => (\n\t\t\t\t\t<li key={index}>{num}</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default MyComponent;\n\n// import React, { useState, useEffect } from \"react\";\n\n// const TimerComponent = () => {\n// \tconst [time, setTime] = useState(0);\n\n// \tuseEffect(() => {\n// \t\tconsole.log(\"Creating timer\");\n// \t\tconst interval = setInterval(() => {\n// \t\t\tconsole.log(\"Interval executed\");\n// \t\t\tsetTime((time) => time + 1);\n// \t\t}, 1000);\n\n// \t\treturn () => {\n// \t\t\tconsole.log(\"Cleaning up!\");\n// \t\t\tclearInterval(interval);\n// \t\t};\n// \t}, []);\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<p>Time: {time} seconds</p>\n// \t\t</div>\n// \t);\n// };\n\n// export default TimerComponent;\n\n// import React, { useState, useEffect } from \"react\";\n\n// function Timer() {\n// \tconst [count, setCount] = useState(0);\n\n// \tuseEffect(() => {\n// \t\tconst interval = setInterval(() => {\n// \t\t\tsetCount((prevCount) => prevCount + 1);\n// \t\t}, 1000);\n\n// \t\treturn () => clearInterval(interval);\n// \t}, []);\n\n// \treturn <div>Timer: {count}</div>;\n// }\n\n// export default Timer;\n\n// import React, { useState, useEffect, useRef } from \"react\";\n\n// function Timer() {\n// \tconst [count, setCount] = useState(0);\n// \tconst intervalRef = useRef(null);\n\n// \tuseEffect(() => {\n// \t\tintervalRef.current = setInterval(() => {\n// \t\t\tsetCount((prevCount) => prevCount + 1);\n// \t\t}, 1000);\n\n// \t\treturn () => clearInterval(intervalRef.current);\n// \t}, []);\n\n// \tconst handleStopTimer = () => {\n// \t\tclearInterval(intervalRef.current);\n// \t\tconsole.log(\"Timer stopped manually!\");\n// \t};\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<p>Timer: {count} seconds</p>\n// \t\t\t<button onClick={handleStopTimer}>Stop Timer</button>\n// \t\t</div>\n// \t);\n// }\n\n// export default Timer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACxBD,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACCH,OAAA;IAAAM,QAAA,gBACCN,OAAA;MAAQO,OAAO,EAAEF,UAAW;MAAAC,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpDX,OAAA;MAAAM,QAAA,EACEH,IAAI,CAACS,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACpBd,OAAA;QAAAM,QAAA,EAAiBO;MAAG,GAAXC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAER,CAAC;AAACT,EAAA,CAnBID,WAAW;AAAAc,EAAA,GAAXd,WAAW;AAqBjB,eAAeA,WAAW;;AAE1B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}